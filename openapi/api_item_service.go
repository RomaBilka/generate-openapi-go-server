/*
 * Test REST API
 *
 * Task â„–3
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"

	"github.com/RomaBiliak/generate-openapi-go-server/database/dbs"
)

// ItemApiService is a service that implements the logic for the ItemApiServicer
// This service should implement the business logic for every endpoint for the ItemApi API.
// Include any external packages or services that will be required by this service.
type ItemApiService struct {
	queries *dbs.Queries
}

// NewItemApiService creates a default api service
func NewItemApiService(queries *dbs.Queries) ItemApiServicer {
	return &ItemApiService{queries: queries}
}

// ItemIdDelete - Deletes the item
func (s *ItemApiService) ItemIdDelete(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update ItemIdDelete with the required logic for this service method.
	// Add api_item_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemIdDelete method not implemented")
}

// ItemIdGet - Find item by ID
func (s *ItemApiService) ItemIdGet(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update ItemIdGet with the required logic for this service method.
	// Add api_item_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Item{}) or use other options such as http.Ok ...
	//return Response(200, []Item{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemIdGet method not implemented")
}

// ItemIdPut - Updates a item in the store with data
func (s *ItemApiService) ItemIdPut(ctx context.Context, id int64, createItemRequest CreateItemRequest) (ImplResponse, error) {
	// TODO - update ItemIdPut with the required logic for this service method.
	// Add api_item_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(202, []Item{}) or use other options such as http.Ok ...
	//return Response(202, []Item{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemIdPut method not implemented")
}

// ItemPost - Create a item in the store with data
func (s *ItemApiService) ItemPost(ctx context.Context, createItemRequest CreateItemRequest) (ImplResponse, error) {
	// TODO - update ItemPost with the required logic for this service method.
	// Add api_item_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, []Item{}) or use other options such as http.Ok ...
	//return Response(201, []Item{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ItemPost method not implemented")
}
